#!/usr/bin/env bun
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
import { Colors } from '../src/index'

const examples = [
    {
        name: "01-basic-window.ts",
        title: "–ë–∞–∑–æ–≤–æ–µ –æ–∫–Ω–æ",
        description: "–ü—Ä–æ—Å—Ç–æ–µ –æ–∫–Ω–æ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ FPS"
    },
    {
        name: "02-shapes-and-text.ts",
        title: "–§–∏–≥—É—Ä—ã –∏ —Ç–µ–∫—Å—Ç",
        description: "–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞"
    },
    {
        name: "03-input-handling.ts",
        title: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞",
        description: "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏ –º—ã—à—å, –ø–ª–∞–≤–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ"
    },
    {
        name: "04-collision-detection.ts",
        title: "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–ª–∏–∑–∏–π",
        description: "–ö–æ–ª–ª–∏–∑–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ñ–∏–≥—É—Ä–∞–º–∏"
    },
    {
        name: "05-texture-loading.ts",
        title: "–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç—É—Ä",
        description: "–†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç—É—Ä–∞–º–∏, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏, –æ—Ç—Ç–µ–Ω–∫–∏"
    },
    {
        name: "06-render-texture.ts",
        title: "Render Texture",
        description: "–†–∏—Å–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç—É—Ä—É, –ø–æ—Å—Ç–æ–±—Ä–∞–±–æ—Ç–∫–∞"
    },
    {
        name: "07-complete-demo.ts",
        title: "–ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è",
        description: "–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –æ–¥–Ω–æ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º –ø—Ä–∏–º–µ—Ä–µ"
    }
]

console.log("üéÆ Raylib TypeScript - –ü—Ä–∏–º–µ—Ä—ã")
console.log("=".repeat(50))

for (let i = 0; i < examples.length; i++) {
    const example = examples[i]
    if (!example) continue
    console.log(`${i + 1}. ${example.title}`)
    console.log(`   –§–∞–π–ª: ${example.name}`)
    console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${example.description}`)
    console.log(`   –ó–∞–ø—É—Å–∫: bun examples/${example.name}`)
    console.log()
}

console.log("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
console.log("‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π –≤—ã—à–µ")
console.log("‚Ä¢ –í–æ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–∞—Ö ESC - –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
console.log("‚Ä¢ FPS –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É")
console.log()

console.log("–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
console.log("‚Ä¢ Bun —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
console.log("‚Ä¢ Raylib –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –≤ ./assets/raylib-5.5_macos/lib/")
console.log("‚Ä¢ –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ 5: —Ñ–∞–π–ª ./assets/textures/texture.jpg")
console.log()

// –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤—ã–±–æ—Ä –ø—Ä–∏–º–µ—Ä–∞
const readline = require('readline')
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
})

rl.question('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∏–º–µ—Ä–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (1-7) –∏–ª–∏ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞: ', (answer: string) => {
    const num = parseInt(answer.trim())

    if (isNaN(num) || num < 1 || num > examples.length) {
        console.log("–í—ã—Ö–æ–¥...")
        rl.close()
        return
    }

    const selectedExample = examples[num - 1]
    if (!selectedExample) return
    console.log(`\nüöÄ –ó–∞–ø—É—Å–∫: ${selectedExample.title}`)
    console.log(`–§–∞–π–ª: ${selectedExample.name}`)
    console.log("–ù–∞–∂–º–∏—Ç–µ ESC –≤ –æ–∫–Ω–µ –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞\n")

    rl.close()

    // –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
    const { spawn } = require('child_process')
    const child = spawn('bun', [`examples/${selectedExample.name}`], {
        stdio: 'inherit'
    })

    child.on('close', (code: number) => {
        console.log(`\n‚úÖ –ü—Ä–∏–º–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —Å –∫–æ–¥–æ–º: ${code}`)
    })

    child.on('error', (error: Error) => {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${error.message}`)
    })
})