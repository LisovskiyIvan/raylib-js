#!/usr/bin/env bun

import { spawn } from "bun";
import { join } from "path";
import { fileURLToPath } from "url";

const __dirname = fileURLToPath(new URL(".", import.meta.url));

const command = process.argv[2];

switch (command) {
  case "compile":
    console.log("üî® –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º C –º–æ–¥—É–ª–∏ –¥–ª—è raylib-js...");
    try {
      const compileScript = join(__dirname, "compile-all.js");
      const result = spawn(["bun", compileScript], {
        stdio: ["inherit", "inherit", "inherit"],
      });
      
      const exitCode = await result.exited;
      if (exitCode === 0) {
        console.log("‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
      } else {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏");
        process.exit(exitCode);
      }
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏:", error.message);
      process.exit(1);
    }
    break;

  case "help":
  case "--help":
  case "-h":
    console.log(`
raylib-js CLI

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  npx raylib-js compile     –ö–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞—Ç—å C –º–æ–¥—É–ª–∏ –¥–ª—è raylib
  npx raylib-js help        –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  npx raylib-js compile     # –ö–æ–º–ø–∏–ª–∏—Ä—É–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ C –º–æ–¥—É–ª–∏
`);
    break;

  default:
    if (!command) {
      console.log("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'npx raylib-js help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.");
    } else {
      console.log(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: ${command}`);
      console.log("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'npx raylib-js help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.");
    }
    process.exit(1);
}