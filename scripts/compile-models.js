#!/usr/bin/env bun

import { $ } from "bun";
import { join } from "path";
import { existsSync, mkdirSync } from "fs";

const packageRoot = process.cwd();

const ASSETS_DIR = "assets";
const WRAPPERS_DIR = join(packageRoot, "src/wrappers/models");

// –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É assets –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (!existsSync(ASSETS_DIR)) {
  mkdirSync(ASSETS_DIR, { recursive: true });
}

// –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º model-wrapper.c
const sourceFile = join(WRAPPERS_DIR, "model-wrapper.c");
const outputFile = join(ASSETS_DIR, "model-wrapper.dylib");

console.log("üî® Compiling model wrappers...");

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç–∏ –∫ raylib
const raylibInclude = "./assets/raylib/include";
const raylibLib = "./assets/raylib/lib";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ raylib
if (!existsSync(raylibInclude) || !existsSync(raylibLib)) {
  console.error("‚ùå Raylib not found in assets/raylib/");
  console.error("Please ensure raylib is installed in the correct location.");
  process.exit(1);
}

try {
  // –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Å –Ω—É–∂–Ω—ã–º–∏ —Ñ–ª–∞–≥–∞–º–∏ –¥–ª—è macOS
  await $`clang -shared -fPIC -I${raylibInclude} -L${raylibLib} -o ${outputFile} ${sourceFile} -lraylib -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo`;

  console.log("‚úÖ Model wrappers compiled successfully!");
  console.log(`üì¶ Output: ${outputFile}`);
} catch (error) {
  console.error("‚ùå Compilation failed:", error.message);
  process.exit(1);
}